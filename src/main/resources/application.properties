spring.application.name=consumer-demo
server.port=8082

#if more kafka servers are running we can provide the ports as comma seperated values
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=myGroup
# tells what to do when there is no initial offset in kafka or when there is no existing offset exist in server. Earliest means, it wil automatically reset the offset to earliest
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*
#it means that consumer can deserialize all the classes from this package

spring.kafka.consumer.properties.spring.json.type.mapping=myUser:com.poc.kafka.consumerdemo.payload.User

